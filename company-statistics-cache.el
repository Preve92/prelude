(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("org-hide-emphasis-markers" (((:keyword "setq") . 1) (lisp-interaction-mode . 1) (nil . 1)) "figures" (((:file "/home/marco/research/projects/paper_msc-thesis-results_20190401-RUNNING/report/tex_src/results.tex") . 1) ((:keyword "\\textwidth") . 1) (latex-mode . 1) (nil . 1)) "file-exists-p" (((:file "/home/marco/repos/MP_emacs/init.el") . 2) ((:keyword "if") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "when") . 1)) "true" (((:file "/home/marco/hobbies/hh-nuig/github-page/Structure/AboutHH/Marco.md") . 1) (markdown-mode . 1) (nil . 1)) "speed" (((:file "/home/marco/repos/MP_emacs/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "best-gc-cons-threshold" (((:file "/home/marco/repos/MP_emacs/init.el") . 1) ((:keyword "defvar") . 1) (emacs-lisp-mode . 1) (nil . 1)) "gc-cons-threshold" (((:file "/home/marco/repos/MP_emacs/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "most-positive-fixnum" (((:file "/home/marco/repos/MP_emacs/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "emacs-load-start-time" (((:file "/home/marco/repos/MP_emacs/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "DEADLINE" (((:file "/home/marco/research/NOTEBOOK.org") . 1) (org-mode . 1) (nil . 1)) "Aimed" (((:file "/home/marco/research/NOTEBOOK.org") . 2) (org-mode . 2) (nil . 2)) "overfeeding" (((:file "/home/marco/research/NOTEBOOK.org") . 1) (org-mode . 1) (nil . 1)) "physicochemical" (((:file "/home/marco/research/NOTEBOOK.org") . 3) (org-mode . 3) (nil . 3)) "constituted" (((:file "/home/marco/research/NOTEBOOK.org") . 1) (org-mode . 1) (nil . 1)) "Config" (((:file "/home/marco/repos/MP_emacs/config.org") . 1) (org-mode . 1) (nil . 1)) "init" (((:file "/home/marco/repos/MP_emacs/config.org") . 1) (org-mode . 1) (nil . 1)) "base" (((:file "/home/marco/repos/MP_emacs/config.org") . 1) (org-mode . 1) (nil . 1)) "mode" (((:file "/home/marco/repos/MP_emacs/config.org") . 3) (org-mode . 3) (nil . 3)) "version" (((:file "/home/marco/repos/MP_emacs/config.org") . 1) (org-mode . 1) (nil . 1)) "user-emacs-directory" (((:file "/home/marco/repos/MP_emacs/config.org[*Org Src config.org • MP_emacs[ elisp ]*]") . 2) ((:keyword "defun") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "setq") . 1)) "file" (((:file "/home/marco/repos/MP_emacs/config.org") . 1) (org-mode . 1) (nil . 1)) "informations" (((:file "/home/marco/repos/MP_emacs/config.org") . 1) (org-mode . 1) (nil . 1)) "data" (((:file "/home/marco/org/Areas.org") . 1) (org-mode . 1) (nil . 1)) "CollinsLab" (((:file "/home/marco/org/Resources.org") . 1) (org-mode . 1) (nil . 1)))) company-statistics--log [nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil ("org-hide-emphasis-markers" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "setq") . 1)) ("figures" (nil . 1) (latex-mode . 1) ((:keyword "\\textwidth") . 1) ((:file "/home/marco/research/projects/paper_msc-thesis-results_20190401-RUNNING/report/tex_src/results.tex") . 1)) ("file-exists-p" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "if") . 1) ((:file "/home/marco/repos/MP_emacs/init.el") . 2)) ("file-exists-p" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "when") . 1) ((:file "/home/marco/repos/MP_emacs/init.el") . 1)) ("true" (nil . 1) (markdown-mode . 1) ((:file "/home/marco/hobbies/hh-nuig/github-page/Structure/AboutHH/Marco.md") . 1)) ("speed" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/marco/repos/MP_emacs/init.el") . 1)) ("best-gc-cons-threshold" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvar") . 1) ((:file "/home/marco/repos/MP_emacs/init.el") . 1)) ("gc-cons-threshold" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/marco/repos/MP_emacs/init.el") . 1)) ("most-positive-fixnum" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/marco/repos/MP_emacs/init.el") . 1)) ("emacs-load-start-time" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/marco/repos/MP_emacs/init.el") . 1)) ("DEADLINE" (nil . 1) (org-mode . 1) ((:file "/home/marco/research/NOTEBOOK.org") . 1)) ("Aimed" (nil . 1) (org-mode . 1) ((:file "/home/marco/research/NOTEBOOK.org") . 1)) ("overfeeding" (nil . 1) (org-mode . 1) ((:file "/home/marco/research/NOTEBOOK.org") . 1)) ("physicochemical" (nil . 2) (org-mode . 2) ((:file "/home/marco/research/NOTEBOOK.org") . 2)) ("physicochemical" (nil . 1) (org-mode . 1) ((:file "/home/marco/research/NOTEBOOK.org") . 1)) ("constituted" (nil . 1) (org-mode . 1) ((:file "/home/marco/research/NOTEBOOK.org") . 1)) ("Config" (nil . 1) (org-mode . 1) ((:file "/home/marco/repos/MP_emacs/config.org") . 1)) ("init" (nil . 1) (org-mode . 1) ((:file "/home/marco/repos/MP_emacs/config.org") . 1)) ("base" (nil . 1) (org-mode . 1) ((:file "/home/marco/repos/MP_emacs/config.org") . 1)) ("mode" (nil . 3) (org-mode . 3) ((:file "/home/marco/repos/MP_emacs/config.org") . 3)) ("mode" (nil . 1) (org-mode . 1) ((:file "/home/marco/repos/MP_emacs/config.org") . 1)) ("mode" (nil . 1) (org-mode . 1) ((:file "/home/marco/repos/MP_emacs/config.org") . 1)) ("version" (nil . 1) (org-mode . 1) ((:file "/home/marco/repos/MP_emacs/config.org") . 1)) ("user-emacs-directory" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "defun") . 1) ((:file "/home/marco/repos/MP_emacs/config.org[*Org Src config.org • MP_emacs[ elisp ]*]") . 2)) ("user-emacs-directory" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/marco/repos/MP_emacs/config.org[*Org Src config.org • MP_emacs[ elisp ]*]") . 1)) ("file" (nil . 1) (org-mode . 1) ((:file "/home/marco/repos/MP_emacs/config.org") . 1)) ("informations" (nil . 1) (org-mode . 1) ((:file "/home/marco/repos/MP_emacs/config.org") . 1)) ("Aimed" (nil . 1) (org-mode . 1) ((:file "/home/marco/research/NOTEBOOK.org") . 1)) ("physicochemical" (nil . 1) (org-mode . 1) ((:file "/home/marco/research/NOTEBOOK.org") . 1)) ("data" (nil . 1) (org-mode . 1) ((:file "/home/marco/org/Areas.org") . 1)) ("CollinsLab" (nil . 1) (org-mode . 1) ((:file "/home/marco/org/Resources.org") . 1))] company-statistics--index 0)